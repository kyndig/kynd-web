---
import { getCollection, render, type CollectionEntry } from 'astro:content';
import HeroSection from '@/components/HeroSection.astro';
import Layout from '@/layouts/Base.astro';
import LinkCard from '@/components/LinkCard.astro';

export async function getStaticPaths() {
  const labs = await getCollection('labs');
  return labs.map((lab) => ({
    params: { id: lab.id },
    props: lab,
  }));
}

type Props = CollectionEntry<'labs'>;
const lab = Astro.props;
const { title, description, image, category, githubUrl, demoUrl, status } = lab.data;
const { Content } = await render(lab);

// Check if this is a multi-item lab (like Raycast Extensions) or a single item
const isMultiItemLab = lab.id === 'raycast-extensions';
---

<Layout title={title} description={description}>
  <HeroSection title={title} preamble={description} image={image?.src} />

  {
    isMultiItemLab ? (
      <section class="multi-item-section">
        <div class="link-cards-grid">
          <LinkCard
            heading="Kynd Time Tracker"
            href="/labs/raycast-extensions/time-tracker"
            variant="default"
          />
          <LinkCard
            heading="Kynd Project Manager"
            href="/labs/raycast-extensions/project-manager"
            variant="green"
          />
          <LinkCard
            heading="Kynd Slack Integration"
            href="/labs/raycast-extensions/slack-integration"
            variant="black"
          />
        </div>
      </section>
    ) : (
      <section class="single-item-section">
        <div class="content-wrapper">
          <div class="main-content">
            <Content />
          </div>

          <div class="sidebar">
            {category && (
              <div class="info-card">
                <h3>Kategori</h3>
                <p>{category}</p>
              </div>
            )}

            {status && (
              <div class="info-card">
                <h3>Status</h3>
                <p class:list={['status', `status-${status}`]}>{status}</p>
              </div>
            )}

            {githubUrl && (
              <div class="info-card">
                <h3>GitHub</h3>
                <a href={githubUrl} target="_blank" rel="noopener noreferrer">
                  Se på GitHub →
                </a>
              </div>
            )}

            {demoUrl && (
              <div class="info-card">
                <h3>Demo</h3>
                <a href={demoUrl} target="_blank" rel="noopener noreferrer">
                  Se demo →
                </a>
              </div>
            )}
          </div>
        </div>
      </section>
    )
  }
</Layout>

<style>
  .multi-item-section {
    padding: 2rem 0;
  }

  .link-cards-grid {
    display: grid;
    grid-template-columns: 1fr;
    gap: 2rem;
    max-width: 1200px;
    margin: 0 auto;
    padding: 0 2rem;

    @media (--md) {
      grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
      gap: 3rem;
    }
  }

  .single-item-section {
    padding: 2rem 0;
  }

  .content-wrapper {
    display: grid;
    grid-template-columns: 1fr;
    gap: 3rem;
    max-width: 1200px;
    margin: 0 auto;
    padding: 0 2rem;

    @media (--md) {
      grid-template-columns: 2fr 1fr;
    }
  }

  .main-content {
    :global(h1) {
      font-size: var(--fs-heading-l);
      margin-bottom: 2rem;
    }

    :global(h2) {
      font-size: var(--fs-heading-m);
      margin-top: 3rem;
      margin-bottom: 1.5rem;
    }

    :global(h3) {
      font-size: var(--fs-heading-s);
      margin-top: 2rem;
      margin-bottom: 1rem;
    }

    :global(p) {
      font-size: var(--fs-body-l);
      line-height: var(--line-height-l);
      margin-bottom: 1.5rem;
    }

    :global(ul) {
      font-size: var(--fs-body-l);
      line-height: var(--line-height-l);
      margin-bottom: 1.5rem;
      padding-left: 2rem;
    }

    :global(ol) {
      font-size: var(--fs-body-l);
      line-height: var(--line-height-l);
      margin-bottom: 1.5rem;
      padding-left: 2rem;
    }

    :global(li) {
      margin-bottom: 0.5rem;
    }

    :global(code) {
      background-color: var(--color-secondary-shade);
      padding: 0.25rem 0.5rem;
      border-radius: 0.25rem;
      font-family: 'JetBrains Mono', monospace;
    }

    :global(pre) {
      background-color: var(--color-secondary-shade);
      padding: 1rem;
      border-radius: 0.5rem;
      overflow-x: auto;
      margin-bottom: 1.5rem;
    }

    :global(pre code) {
      background: none;
      padding: 0;
    }
  }

  .sidebar {
    display: flex;
    flex-direction: column;
    gap: 1.5rem;
  }

  .info-card {
    background-color: var(--color-secondary-shade);
    border: 2px solid var(--color-dark-blue);
    padding: 1.5rem;
    border-radius: 0.5rem;

    h3 {
      font-size: var(--fs-body-m);
      font-weight: var(--font-weight-medium);
      margin: 0 0 0.5rem 0;
      color: var(--color-accent);
    }

    p {
      margin: 0;
      font-size: var(--fs-body-m);
    }

    a {
      color: var(--color-red);
      text-decoration: none;
      font-weight: var(--font-weight-medium);

      &:hover {
        text-decoration: underline;
      }
    }
  }

  .status {
    text-transform: capitalize;
    font-weight: var(--font-weight-medium);

    &.status-active {
      color: var(--color-red);
    }

    &.status-completed {
      color: #22c55e;
    }

    &.status-experimental {
      color: #f59e0b;
    }
  }
</style>
