---
import type { HTMLAttributes } from 'astro/types';

type Props = HTMLAttributes<'a'> & {
  isButton?: boolean;
};

const { href, isButton, class: className, ...rest } = Astro.props;

const { pathname } = Astro.url;
const subpath = pathname.match(/[^/]+/g);

const isActive = href === pathname || href === '/' + subpath?.[0];
---

<a
  href={href}
  class:list={[className, { active: isActive, 'button secondary': isButton }]}
  {...rest}
>
  <slot />
</a>

<style>
  a {
    &:hover:not(.button) {
      background-color: var(--color-accent);
      color: var(--color-primary);
    }

    &.active {
      background-color: var(--color-accent);
      color: var(--color-primary);
      font-weight: var(--font-weight-semibold);
    }

    &:not(.button) {
      padding-inline: 1rem;
      font-size: var(--fs-label-l);
      line-height: var(--line-height-m);
      min-width: fit-content;
      white-space: nowrap;
      text-align: center;
      flex-shrink: 0;
    }

    @media (--lg) {
      &:not(.button) {
        padding-inline: 1rem;
      }
    }

    @media (--xl) {
      &:not(.button) {
        padding-inline: 1.25rem;
      }
    }

    @media (--2xl) {
      &:not(.button) {
        padding-inline: 1.5rem;
      }
    }
  }
</style>
