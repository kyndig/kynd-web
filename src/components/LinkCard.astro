---
import type { HTMLAttributes } from 'astro/types';
import Link from '@/components/Link.astro';

type Props = HTMLAttributes<'article'> & {
  variant?: 'default' | 'green' | 'black';
  heading: string;
  subheading?: string;
  linkHref?: string;
  className?: string;
};

const {
  variant = 'default',
  heading,
  subheading,
  linkHref = '#',
  className,
  ...rest
} = Astro.props;

const linkVariant =
  variant === 'black' ? 'light-secondary' : variant === 'green' ? 'dark-secondary' : 'dark-primary';
---

<article class:list={['card', `card--${variant}`, className]} {...rest}>
  <div class="card__content">
    <div class="card__heading">
      <div class="card__label">
        <span class="card__label-text">{heading}</span>
      </div>
      {
        subheading && (
          <div class="card__label">
            <span class="card__label-text">{subheading}</span>
          </div>
        )
      }
    </div>

    <Link href={linkHref} variant={linkVariant} linkOverlay aria-label={heading} />
  </div>

  <div class:list={['card__pattern', `card__pattern--${variant}`]} aria-hidden="true"></div>
</article>

<style>
  .card {
    position: relative;
    display: flex;
    justify-content: space-between;
    align-items: center;
    gap: 4.8125rem;
    padding: 3.125rem;
    width: 100%;
    max-width: 36rem;
    background-color: var(--color-light-gray);
    border: 2px solid var(--color-dark-blue);
    box-shadow: 0px 5px 0px 0px var(--color-shadow);
    overflow: hidden;

    &:hover {
      box-shadow: var(--shadow);
    }
  }

  .card__content {
    z-index: 1;
    display: flex;
    flex-direction: column;
    gap: 4rem;
  }

  .card__heading {
    display: flex;
    flex-direction: column;
    gap: 0;
  }

  .card__label {
    display: inline-flex;
    padding: 0.4375rem;
    background-color: var(--color-accent);
    border-radius: 0;
  }

  .card__label-text {
    font-weight: 500;
    font-size: 1.875rem;
    line-height: 1.276;
    color: var(--color-dark-blue);
  }

  /* Pattern styles */
  .card__pattern {
    position: absolute;
    top: var(--pattern-top, 50%);
    left: var(--pattern-left, 65%);
    transform: translate(-50%, -50%);
    z-index: 0;
    width: var(--pattern-size, 40rem);
    aspect-ratio: var(--pattern-aspect, 1 / 1);
    background-color: var(--pattern-color);
    -webkit-mask-repeat: no-repeat;
    mask-repeat: no-repeat;
    -webkit-mask-size: contain;
    mask-size: contain;
    -webkit-mask-position: center;
    mask-position: center;
  }

  .card__pattern svg {
    width: 100%;
    height: auto;
  }

  .card__pattern--default {
    --pattern-top: 40%;
    --pattern-left: 100%;
    --pattern-aspect: 1219 / 878;
    -webkit-mask-image: url('/patterns/pattern-2.svg');
    mask-image: url('/patterns/pattern-2.svg');
  }

  .card__pattern--green,
  .card__pattern--black {
    /* Slightly different placement for non-default cards */
    --pattern-top: 100%;
    --pattern-left: 100%;
    --pattern-aspect: 1099 / 755;
    -webkit-mask-image: url('/patterns/pattern-1.svg');
    mask-image: url('/patterns/pattern-1.svg');
  }

  /* Variant-specific styles */
  .card {
    color: var(--color-dark-blue);
    --pattern-color: #ececec;
  }

  .card--green {
    background-color: var(--color-accent);
    --pattern-color: #1e292b;
  }

  .card--green .card__label {
    background-color: var(--color-white);
  }

  /* Ensure readable text color on variants */
  .card--green {
    color: var(--color-dark-blue);
  }

  .card--black {
    background-color: var(--color-dark-blue);
    color: var(--color-white);
    --pattern-color: #ffffff;
  }

  .card--black .card__label {
    background-color: var(--color-white);
  }

  .card--black .card__label-text {
    color: var(--color-dark-blue);
  }

  /* Responsive adjustments */
  @media (max-width: 48em) {
    .card {
      flex-direction: column;
      gap: 2rem;
      padding: 2rem;
      width: 100%;
      max-width: 24rem;
      align-items: flex-start;
    }

    .card__content {
      gap: 2rem;
    }

    .card__label-text {
      font-size: 1.5rem;
    }

    .card {
      --pattern-size: 24rem;
    }

    .card__pattern--default {
      --pattern-top: 50%;
      --pattern-left: 100%;
    }

    .card__pattern--green,
    .card__pattern--black {
      --pattern-top: 100%;
      --pattern-left: 100%;
    }
  }
</style>
